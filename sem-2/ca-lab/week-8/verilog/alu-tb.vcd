$date
	Fri May 19 14:45:00 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module alu_tb $end
$var wire 33 ! Results [32:0] $end
$var wire 4 " NZCV [3:0] $end
$var reg 1 # ALU_enable $end
$var reg 32 $ A_input [31:0] $end
$var reg 32 % B_input [31:0] $end
$var reg 4 & Cmd [3:0] $end
$var reg 5 ' Shamt [4:0] $end
$var reg 1 ( sh $end
$scope module UUT $end
$var wire 1 # ALU_enable $end
$var wire 32 ) A_input [31:0] $end
$var wire 32 * B_input [31:0] $end
$var wire 4 + Cmd [3:0] $end
$var wire 5 , Shamt [4:0] $end
$var wire 1 ( sh $end
$var wire 4 - NZCV [3:0] $end
$var reg 33 . Results [32:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1111 .
b1000 -
bx ,
b0 +
b111 *
b1011 )
x(
bx '
b0 &
b111 %
b1011 $
1#
b1000 "
b1111 !
$end
#10
b11 !
b11 .
b1 &
b1 +
#20
b1100 !
b1100 .
b10 &
b10 +
#30
b1100 !
b1100 .
b11 &
b11 +
#40
b1100 !
b1100 .
b100 &
b100 +
#50
b1100 !
b1100 .
b101 &
b101 +
#60
b10010 !
b10010 .
b110 &
b110 +
#70
b100 !
b100 .
b111 &
b111 +
#80
b1 "
b1 -
b111111111111111111111111111111100 !
b111111111111111111111111111111100 .
b1000 &
b1000 +
#90
b1100 "
b1100 -
b0 !
b0 .
b1001 &
b1001 +
#100
b1000 "
b1000 -
b1 !
b1 .
b1010 &
b1010 +
#110
b1 !
b1 .
b1011 &
b1011 +
#120
b1 !
b1 .
b1100 &
b1100 +
#130
b1100 "
b1100 -
b0 !
b0 .
b1101 &
b1101 +
#140
b1110 &
b1110 +
#150
b1000 "
b1000 -
b1011000 !
b1011000 .
b1111 &
b1111 +
b11 '
b11 ,
1(
#160
